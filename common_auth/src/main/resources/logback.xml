<!--具体参数属性参考地址：
    1、https://www.cnblogs.com/reason-cai/p/6763108.html
    2、https://www.cnblogs.com/lixuwu/p/5804793.html
    3、https://blog.csdn.net/zhanlan_2017/article/details/81988612?utm_source=blogxgwz1
-->

<configuration>
    <!--引入的properties配置文件-->
    <property resource="logback.properties"/>
    <!-- 本项目的名字，用于区分不同应用程序的记录 -->
    <contextName>${context.name}</contextName>

    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${conversion.pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>info</level>
        </filter>
    </appender>

    <!-- root file 日志 -->
    <appender name="root-file-error"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.dir}/${context.name}_error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>
                ${log.dir}/${context.name}_error.%d{${rolling.policy.file.name.pattern}}%d{mmss}.%i.log.zip
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${max.file.size}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>${max.history}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${conversion.pattern}</pattern>
        </encoder>
        <!-- 当日志级别等于设定的level，返回onMatch，否则返回onMismatch -->
        <!-- onMatch也可以设定为DENY拒绝；match结果可以对应以下三个动作之一：
         accept：整个过滤链不再向下走，直接返回通过操作
         deny：整个过滤链不再向下走，直接返回不通过操作
         neutral：不返回操作，继续沿过滤链走下一个过滤器-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <appender name="root-file-warn"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.dir}/${context.name}_warn.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>
                ${log.dir}/${context.name}_warn.%d{${rolling.policy.file.name.pattern}}%d{mmss}.%i.log.zip
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${max.file.size}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>${max.history}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${conversion.pattern}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>warn</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <appender name="root-file-info"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.dir}/${context.name}_info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>
                ${log.dir}/${context.name}_info.%d{${rolling.policy.file.name.pattern}}%d{mmss}.%i.log.zip
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${max.file.size}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>${max.history}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${conversion.pattern}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <appender name="root-file-debug"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.dir}/${context.name}_debug.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>
                ${log.dir}/${context.name}_debug.%d{${rolling.policy.file.name.pattern}}%d{mmss}.%i.log.zip
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${max.file.size}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>${max.history}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${conversion.pattern}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>debug</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!--去掉不需要的日志-->
    <logger name="jdbc.connection" additivity="false" level="OFF">
        <appender-ref ref="console"/>
    </logger>
    <logger name="jdbc.resultset" additivity="false" level="OFF">
        <appender-ref ref="console"/>
    </logger>
    <logger name="jdbc.audit" additivity="false" level="OFF">
        <appender-ref ref="console"/>
    </logger>
    <logger name="jdbc.sqlonly" additivity="false" level="OFF">
        <appender-ref ref="console"/>
    </logger>
    <logger name="jdbc.sqltiming" additivity="false" level="INFO">
        <appender-ref ref="console"/>
    </logger>
    <logger name="io.swagger" additivity="false" level="OFF">
        <appender-ref ref="console"/>
    </logger>

    <root level="${root.level}">
        <appender-ref ref="console"/>
        <appender-ref ref="root-file-error"/>
        <appender-ref ref="root-file-warn"/>
        <appender-ref ref="root-file-info"/>
        <appender-ref ref="root-file-debug"/>
    </root>

</configuration>